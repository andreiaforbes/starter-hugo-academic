kable(df_PriorReconciled, caption = "Rule 10 - Percentage of Par Levels with Stock-outs by Prior Reconciled Year Month"
,format = "simple",longtable = TRUE)
stats_overall<-explore(
Not_Recommended,
vars=c("Stockouts", "DaysSinceLastVend","Refill"),
#byvar= c("RefillFrequency" ),
fun=c("n_obs","min", "mean","median","max","sd"),
nr=Inf
)
summary(stats_overall, dec=2)
#dtab(stats_overall,dec=2) %>% render()
df_overalldataset<-stats_overall$tab
register("df_overalldataset")
df_overalldataset
kable(df_overalldataset, caption = "Statistics of Days Since Last Vend, Stock-outs and Refills"
,format = "simple",longtable = FALSE, full_width = T)
#Put  stringAsFactors = True, so it puts in the factors into characters
options(stringsAsFactors = FALSE)
options(scipen=999) # this was added to show the itemtransaction key as a whole
#load libraries
library(RODBC)
library(radiant)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(kableExtra)
#library(scales)
#library(stringr)
#library(rstatix)
#library(knitr)
##Load data
conn <- odbcConnect("Impala_Prod")
df<- sqlQuery(conn, query = "select * from Swan.AF_Data_Final_Tampa") # Swan.AF_11722_Final
df
#Change dates to Posixct
df$proposeddatetime   <- as.POSIXct(df$proposeddatetime)
df$accepteddatetime   <- as.POSIXct(df$accepteddatetime)
df$reconcileddatetime <- as.POSIXct(df$reconcileddatetime)
df$ignoreddatetime    <- as.POSIXct(df$ignoreddatetime)
#add Year Month
df$ProposedYearMonth <- substring(as.character(df$proposeddatetime),1,7)
df$ReconciledYearMonth <- substring(as.character(df$reconcileddatetime),1,7)
df$IgnoredYearMonth <- substring(as.character(df$ignoreddatetime),1,7)
df$Events <- 1
df
# Removed the month of May 2021
df <- df %>%
filter(ProposedYearMonth != "2021-11")
df #15,284
unique(df$recommendationstatuslocaledescription)
#filter out only the reconciled and accepted transactions
df_reconciled <- df %>%
filter(recommendationstatuslocaledescription == 'Reconciled')
#focus only on the reconciled ones
# filter(recommendationstatuslocaledescription != 'Ignored')%>%
#filter(recommendationstatuslocaledescription != 'Active')
df_reconciled
#df_reconciled
unique(df_reconciled$ReconciledYearMonth)
unique(df_reconciled$ProposedYearMonth)
unique(df_reconciled$recommendationstatuslocaledescription)
library(dplyr)
df_aggregate<- df_reconciled %>%
select(recommendationstatuslocaledescription,minreconciledactiondscr,Events)  %>%
group_by(recommendationstatuslocaledescription,minreconciledactiondscr) %>%
summarise(Events= sum(Events))%>%
arrange(desc(Events))
df_aggregate
#Add a column to create a sum and a percentage
df_aggregate$Sum <- sum(df_aggregate$Events)
df_aggregate$Percent <- round((df_aggregate$Events/df_aggregate$Sum)*100,1)
df_aggregate
visualize(
df_aggregate,
xvar = "minreconciledactiondscr",
yvar = "Percent",
type = "bar",
fill = "minreconciledactiondscr",
alpha = 1,
# facet_row = "recommendationstatuslocaledescription",
theme = "theme_classic",
labs = list(
title = "Activity of Min Reconciled Recommendation",
subtitle = "", caption = "",
x = "Activity", y = "Percentage"
),
custom = TRUE
)  + theme(axis.text.x = element_text(angle =0, size = 9, hjust = 0.5)) +
scale_fill_manual(values=c("#E17025", "#115391","#877A6E")) +
#scale_fill_manual(values=c("#115391", "#E17025", "#877A6E", "#D3468F")) +
theme(axis.title.x=element_text(color = "gray25",vjust = -1, hjust = 0.5, size = 14, face = "bold"))+
theme(axis.title.y=element_text(color = "gray25", vjust = 3, hjust = 0.5, size = 14, face = "bold",)) +
theme(axis.text.x = element_text(color = "gray25", size = 12))+
theme(axis.text.y = element_text(color = "gray25", size = 12))+
theme(legend.text = element_text(color = "gray25", face = "bold",size = 10)) +
theme(legend.title = element_text(color = "gray25", face = "bold",size = 10)) +
theme(plot.title = element_text(color = "gray25", face = "bold",size = 15, vjust = 1, hjust = 0.5)) +
#geom_col(position = "dodge") +
#geom_text(aes(label = Percentage),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))+
geom_text(aes(x = minreconciledactiondscr, y = Percent, label = sprintf("%.1f%%", Percent)), position = position_dodge(width = 0.9), size = 3.5,hjust = .5, vjust =-.5 , angle = 0)
library(dplyr)
df_aggregate<- df_reconciled %>%
select(recommendationstatuslocaledescription,maxreconciledactiondscr,Events)  %>%
group_by(recommendationstatuslocaledescription,maxreconciledactiondscr) %>%
summarise(Events= sum(Events))%>%
arrange(desc(Events))
df_aggregate
#Add a column to create a sum and a percentage
df_aggregate$Sum <- sum(df_aggregate$Events)
df_aggregate$Percent <- round((df_aggregate$Events/df_aggregate$Sum)*100,1)
df_aggregate
visualize(
df_aggregate,
xvar = "maxreconciledactiondscr",
yvar = "Percent",
type = "bar",
fill = "maxreconciledactiondscr",
alpha = 1,
# facet_row = "recommendationstatuslocaledescription",
theme = "theme_classic",
labs = list(
title = "Activity of Max Reconciled Recommendation",
subtitle = "", caption = "",
x = "Activity", y = "Percentage"
),
custom = TRUE
)  + theme(axis.text.x = element_text(angle =0, size = 9, hjust = 0.5)) +
scale_fill_manual(values=c("#E17025", "#115391","#877A6E")) +
#scale_fill_manual(values=c("#115391", "#E17025", "#877A6E", "#D3468F")) +
theme(axis.title.x=element_text(color = "gray25",vjust = -1, hjust = 0.5, size = 14, face = "bold"))+
theme(axis.title.y=element_text(color = "gray25", vjust = 3, hjust = 0.5, size = 14, face = "bold",)) +
theme(axis.text.x = element_text(color = "gray25", size = 12))+
theme(axis.text.y = element_text(color = "gray25", size = 12))+
theme(legend.text = element_text(color = "gray25", face = "bold",size = 10)) +
theme(legend.title = element_text(color = "gray25", face = "bold",size = 10)) +
theme(plot.title = element_text(color = "gray25", face = "bold",size = 15, vjust = 0.5, hjust = 0.5)) +
#geom_col(position = "dodge") +
#geom_text(aes(label = Percentage),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))+
geom_text(aes(x = maxreconciledactiondscr, y = Percent, label = sprintf("%.1f%%", Percent)), position = position_dodge(width = 0.9), size = 3.5,hjust = .5, vjust =-.5 , angle = 0)
reconciled_agg <- df_reconciled %>%
select(recommendationstatuslocaledescription, ReconciledYearMonth, Events) %>%
group_by(recommendationstatuslocaledescription, ReconciledYearMonth) %>%
summarise(Events= sum(Events))%>%
arrange(ReconciledYearMonth)
reconciled_agg
visualize(
reconciled_agg,
xvar = "ReconciledYearMonth",
yvar = "Events",
type = "bar",
alpha = .9,
fillcol = "#115391",
#fill = "ReconciledYearMonth",
# facet_row = "recommendationstatuslocaledescription",
theme = "theme_classic",
labs = list(
title = "Reconciled Par Level Recommendations by Reconciled Year Month",
subtitle = "", caption = "",
x = "Year Month",
y = "Reconciliation Events"
),
custom = TRUE
) + theme(axis.text.x = element_text(angle =45, size = 9, hjust = 1)) +
#scale_fill_manual(values=c("#E17025", "#115391","#877A6E")) +
#scale_fill_manual(values=c("#115391", "#E17025", "#877A6E", "#D3468F")) +
theme(axis.title.x=element_text(color = "gray25",vjust = -1, hjust = 0.5, size = 14, face = "bold"))+
theme(axis.title.y=element_text(color = "gray25", vjust = 3, hjust = 0.5, size = 14, face = "bold",)) +
theme(axis.text.x = element_text(color = "gray25", size = 12))+
theme(axis.text.y = element_text(color = "gray25", size = 12))+
theme(legend.text = element_text(color = "gray25", face = "bold",size = 10)) +
theme(legend.title = element_text(color = "gray25", face = "bold",size = 10)) +
theme(plot.title = element_text(color = "gray25", face = "bold",size = 15, vjust = 1, hjust = 0.5)) +
#geom_col(position = "dodge") +
#geom_text(aes(label = Percentage),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))+
geom_text(aes(label = Events),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))
#filter out only the reconciled and accepted transactions
df_active <- df %>%
filter(recommendationstatuslocaledescription == 'Active') %>%
filter(isrecommended == 'true') %>%
filter(isactive == 'true')%>%
filter(ProposedYearMonth < '2021-11')
#focus only on the reconciled ones
# filter(recommendationstatuslocaledescription != 'Ignored')%>%
#filter(recommendationstatuslocaledescription != 'Active')
df_active #48
active_agg <- df_active %>%
select(recommendationstatuslocaledescription, ProposedYearMonth, Events) %>%
group_by(recommendationstatuslocaledescription, ProposedYearMonth) %>%
summarise(Events= sum(Events))%>%
arrange(ProposedYearMonth)
active_agg
visualize(
active_agg,
xvar = "ProposedYearMonth",
yvar = "Events",
type = "bar",
alpha = .9,
fillcol = "#E17025",#,"#877A6E"
#fill = "ReconciledYearMonth",
# facet_row = "recommendationstatuslocaledescription",
theme = "theme_classic",
labs = list(
title = "Active Oustanding Proposed Recommendations by Year Month",
subtitle = "", caption = "",
x = "Year Month",
y = "Recommendation Count"
),
custom = TRUE
) + theme(axis.text.x = element_text(angle =45, size = 9, hjust = 1)) +
#scale_fill_manual(values=c("#E17025", "#115391","#877A6E")) +
#scale_fill_manual(values=c("#115391", "#E17025", "#877A6E", "#D3468F")) +
theme(axis.title.x=element_text(color = "gray25",vjust = -1, hjust = 0.5, size = 14, face = "bold"))+
theme(axis.title.y=element_text(color = "gray25", vjust = 3, hjust = 0.5, size = 14, face = "bold",)) +
theme(axis.text.x = element_text(color = "gray25", size = 12))+
theme(axis.text.y = element_text(color = "gray25", size = 12))+
theme(legend.text = element_text(color = "gray25", face = "bold",size = 10)) +
theme(legend.title = element_text(color = "gray25", face = "bold",size = 10)) +
theme(plot.title = element_text(color = "gray25", face = "bold",size = 15, vjust = 1, hjust = 0.5)) +
#geom_col(position = "dodge") +
#geom_text(aes(label = Percentage),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))+
geom_text(aes(label = Events),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))
unique(df$recommendationstatuslocaledescription)
#filter out only the reconciled and accepted transactions
df_active_not_recommended <- df %>%
filter(recommendationstatuslocaledescription == 'Active') %>%
filter(isrecommended == 'false') %>%
filter(ProposedYearMonth < '2021-11')
#focus only on the reconciled ones
# filter(recommendationstatuslocaledescription != 'Ignored')%>%
#filter(recommendationstatuslocaledescription != 'Active')
df_active_not_recommended
active_agg_not_recommended <- df_active_not_recommended %>%
select(recommendationstatuslocaledescription, ProposedYearMonth, Events) %>%
group_by(recommendationstatuslocaledescription, ProposedYearMonth) %>%
summarise(Events= sum(Events))%>%
arrange(ProposedYearMonth)
active_agg
visualize(
active_agg_not_recommended,
xvar = "ProposedYearMonth",
yvar = "Events",
type = "bar",
alpha = .9,
fillcol = "#E17025",#,"#877A6E"
#fill = "ReconciledYearMonth",
# facet_row = "recommendationstatuslocaledescription",
theme = "theme_classic",
labs = list(
title = "Active Proposed Recommendations with 'Not Recommended' flag by Year Month",
subtitle = "", caption = "",
x = "Year Month",
y = "Recommendations Count"
),
custom = TRUE
) + theme(axis.text.x = element_text(angle =45, size = 9, hjust = 1)) +
#scale_fill_manual(values=c("#E17025", "#115391","#877A6E")) +
#scale_fill_manual(values=c("#115391", "#E17025", "#877A6E", "#D3468F")) +
theme(axis.title.x=element_text(color = "gray25",vjust = -1, hjust = 0.5, size = 14, face = "bold"))+
theme(axis.title.y=element_text(color = "gray25", vjust = 3, hjust = 0.5, size = 14, face = "bold",)) +
theme(axis.text.x = element_text(color = "gray25", size = 12))+
theme(axis.text.y = element_text(color = "gray25", size = 12))+
theme(legend.text = element_text(color = "gray25", face = "bold",size = 10)) +
theme(legend.title = element_text(color = "gray25", face = "bold",size = 10)) +
theme(plot.title = element_text(color = "gray25", face = "bold",size = 15, vjust = 1, hjust = 0.5)) +
#geom_col(position = "dodge") +
#geom_text(aes(label = Percentage),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))+
geom_text(aes(label = Events),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))
#filter out only the reconciled and accepted transactions
df_ignored <- df %>%
filter(recommendationstatuslocaledescription == 'Ignored')
#focus only on the reconciled ones
# filter(recommendationstatuslocaledescription != 'Ignored')%>%
#filter(recommendationstatuslocaledescription != 'Active')
ignored_agg <- df_ignored %>%
select(recommendationstatuslocaledescription, IgnoredYearMonth, Events) %>%
group_by(recommendationstatuslocaledescription, IgnoredYearMonth) %>%
summarise(Events= sum(Events))%>%
arrange(IgnoredYearMonth)
ignored_agg
visualize(
ignored_agg,
xvar = "IgnoredYearMonth",
yvar = "Events",
type = "bar",
alpha = .9,
fillcol = "#877A6E",
#fill = "ReconciledYearMonth",
# facet_row = "recommendationstatuslocaledescription",
theme = "theme_classic",
labs = list(
title = "Ignored Proposed Recommendations by Year Month",
subtitle = "", caption = "",
x = "Year Month",
y = "Ignored Recommendations"
),
custom = TRUE
) + theme(axis.text.x = element_text(angle =45, size = 9, hjust = 1)) +
#scale_fill_manual(values=c("#E17025", "#115391","#877A6E")) +
#scale_fill_manual(values=c("#115391", "#E17025", "#877A6E", "#D3468F")) +
theme(axis.title.x=element_text(color = "gray25",vjust = -1, hjust = 0.5, size = 14, face = "bold"))+
theme(axis.title.y=element_text(color = "gray25", vjust = 3, hjust = 0.5, size = 14, face = "bold",)) +
theme(axis.text.x = element_text(color = "gray25", size = 12))+
theme(axis.text.y = element_text(color = "gray25", size = 12))+
theme(legend.text = element_text(color = "gray25", face = "bold",size = 10)) +
theme(legend.title = element_text(color = "gray25", face = "bold",size = 10)) +
theme(plot.title = element_text(color = "gray25", face = "bold",size = 15, vjust = 1, hjust = 0.5)) +
#geom_col(position = "dodge") +
#geom_text(aes(label = Percentage),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))+
geom_text(aes(label = Events),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))
##Load data
conn <- odbcConnect("Impala_Prod")
df<- sqlQuery(conn, query = "select * from Swan.AF_OptimizationList_Tampa") # Swan.AF_11722_Final
df
#rename
df <- df %>%
rename(PriorReconciledDateTime = priorreconcileddatetime) %>%
rename(DaysSinceLastVend = dayssincelastvend) %>%
rename(RefillFrequency = refillfrequency)%>%
rename(IsRecommended = isrecommended)%>%
rename(RecommendationRuleKey = recommendationrulekey)%>%
rename(RecommendationRule = recommendationrule)%>%
rename(RecommendationStatusKey = recommendationstatuskey) %>%
rename(Refill = refill)%>%
rename(Stockouts = stockouts)
unique(df$IsRecommended)
unique(df$RecommendationStatusKey)
df$PriorReconciledDateTimeNew   <- as.POSIXct(df$PriorReconciledDateTime)
df$PriorReconciledDateTimeNew <- substring(as.character(df$PriorReconciledDateTimeNew),1,7)
df$Events <- 1
df$DaysSinceLastVend <- as.numeric(df$DaysSinceLastVend)
df$RefillFrequency <- as.numeric(df$RefillFrequency)
df
unique(df$PriorReconciledDateTimeNew)
#Replace the NA with '0000-00'
df$PriorReconciledDateTimeNew <- replace(df$PriorReconciledDateTimeNew, is.na(df$PriorReconciledDateTimeNew),'0000-00')
unique(df$PriorReconciledDateTimeNew)
#filtered out data for May 2021
Not_Recommended <- df %>%
filter(IsRecommended == 0)#%>%
# filter(PriorReconciledDateTimeNew !='2021-05')
#filtered out data for May 2021
Not_Recommended <- df %>%
filter(IsRecommended == 0)%>%
filter(PriorReconciledDateTimeNew !='2021-11')
Not_Recommended #1824
library(dplyr)
df_aggregate<- Not_Recommended %>%
select(RecommendationRuleKey, RecommendationRule,Events)%>%
group_by(RecommendationRuleKey, RecommendationRule) %>%
summarise(Events= sum(Events))%>%
arrange(desc(Events))
df_aggregate
df_aggregate$Sum <- sum(df_aggregate$Events)
df_aggregate$Percent <- round((df_aggregate$Events/df_aggregate$Sum)*100,1)
df_aggregate
visualize(
df_aggregate,
xvar = "RecommendationRuleKey",
yvar = "Percent",
type = "bar",
fillcol = "#115391",
#  fill = "RecommendationRuleKey",
alpha = .9,
theme = "theme_classic",
labs = list(
title = "Percentage of Par Levels with Stock-outs by Rules",
subtitle = "", caption = "",
x = "Rule", y = "Percentage"
),
custom = TRUE
)  + theme(axis.text.x = element_text(angle =0, size = 9, hjust = 1)) +
# scale_fill_manual(values=c("#EAC9DC","#115391","#983B90","#B6DCE4",
#"#CCDDAF","#E17025", "#877A6E", "#98C11D",
# "#19993B","#EDB46A","#E17025","#C45729",
# "#877A6E")) +
#scale_fill_manual(values=c("#115391", "#E17025", "#877A6E", "#D3468F")) +
theme(axis.title.x=element_text(color = "gray25",vjust = 1, hjust = 0.5, size = 14, face = "bold"))+
theme(axis.title.y=element_text(color = "gray25", vjust = 3, hjust = 0.5, size = 14, face = "bold",)) +
theme(axis.text.x = element_text(color = "gray25", size = 12))+
theme(axis.text.y = element_text(color = "gray25", size = 12))+
theme(legend.text = element_text(color = "gray25", face = "bold",size = 10)) +
theme(legend.title = element_text(color = "gray25", face = "bold",size = 10)) +
theme(plot.title = element_text(color = "gray25", face = "bold",size = 15, vjust = 1, hjust = 0.5)) +
# geom_col(position = "dodge") +
#geom_text(aes(label = Percentage),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))+
geom_text(aes(x = RecommendationRuleKey, y = Percent, label = sprintf("%.1f%%", Percent)), position = position_dodge(width = 0.9), size = 3.5,hjust = .5, vjust =-.5 , angle = 0)
df_aggregate_table <- data.frame(RecommendationRule = df_aggregate$RecommendationRuleKey,
Events             = df_aggregate$Events,
Percent            = df_aggregate$Percent)
df_aggregate_table
df_aggregate
kable(df_aggregate_table, caption = "Percentage of Par Levels with Stock-outs by Rules"
,format = "simple",longtable = TRUE)
df_PriorReconciled<- Not_Recommended %>%
select(PriorReconciledDateTimeNew, Events)  %>%
group_by(PriorReconciledDateTimeNew) %>%
summarise(Events= sum(Events))%>%
arrange(desc(Events))
df_PriorReconciled
#Create a sum and percentage column
df_PriorReconciled$Sum <- sum(df_PriorReconciled$Events)
df_PriorReconciled$Percent <- round((df_PriorReconciled$Events/df_PriorReconciled$Sum)*100,1)
df_PriorReconciled
#Replace the NA with '0000-00'
df_PriorReconciled$PriorReconciledDateTimeNew <- replace(df_PriorReconciled$PriorReconciledDateTimeNew, is.na(df_PriorReconciled$PriorReconciledDateTimeNew),'0000-00')
#Create a dataframe
df_PriorReconciled_table <- data.frame(YearMonth = df_PriorReconciled$PriorReconciledDateTimeNew,
Events                  = df_PriorReconciled$Events,
Percent                 = df_PriorReconciled$Percent)
df_PriorReconciled_table
#arrange the data
df_PriorReconciled <- df_PriorReconciled_table %>%
select(YearMonth, Events, Percent)%>%
arrange((YearMonth))
visualize(
df_PriorReconciled,
xvar = "YearMonth",
yvar = "Percent",
type = "bar",
# fill = "YearMonth",
fillcol = "#E17025",
alpha = .9,
theme = "theme_classic",
labs = list(
title = "Percentage of Par Levels with Stock-outs by Prior Reconciled Year Month",
subtitle = "", caption = "",
x = "Prior Reconciled Year Month", y = "Percentage"
),
custom = TRUE
)  + theme(axis.text.x = element_text(angle =45, size = 9, hjust = 1)) +
#scale_fill_manual(values=c("#E17025", "#115391","#877A6E")) +
#scale_fill_manual(values=c("#115391", "#E17025", "#877A6E", "#D3468F")) +
theme(axis.title.x=element_text(color = "gray25",vjust = -1, hjust = 0.5, size = 14, face = "bold"))+
theme(axis.title.y=element_text(color = "gray25", vjust = 3, hjust = 0.5, size = 14, face = "bold",)) +
theme(axis.text.x = element_text(color = "gray25", size = 12))+
theme(axis.text.y = element_text(color = "gray25", size = 12))+
theme(legend.text = element_text(color = "gray25", face = "bold",size = 10)) +
theme(legend.title = element_text(color = "gray25", face = "bold",size = 10)) +
theme(plot.title = element_text(color = "gray25", face = "bold",size = 15, vjust = 1, hjust = 0.5)) +
#geom_col(position = "dodge") +
#geom_text(aes(label = Percentage),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))+
# geom_text(aes(label = Events),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))
geom_text(aes(x = YearMonth, y = Percent, label = sprintf("%.1f%%", Percent)), position = position_dodge(width = 0.9), size = 3.5,hjust = .5, vjust =-.5 , angle = 0)
kable(df_PriorReconciled, caption = "Percentage of Par Levels with Stock-outs by Prior Reconciled Year Month"
,format = "simple",longtable = TRUE)
Rule_10 <- Not_Recommended %>%
filter(RecommendationRuleKey == 10)
Rule_10
df_PriorReconciled <- Rule_10 %>% #Not_Recommended %>%
select(PriorReconciledDateTimeNew, Events)  %>%
group_by(PriorReconciledDateTimeNew) %>%
summarise(Events= sum(Events))%>%
arrange(desc(Events))
df_PriorReconciled
#Add a column to create a sum and a percentage
df_PriorReconciled$Sum <- sum(df_PriorReconciled$Events)
df_PriorReconciled$Percent <- round((df_PriorReconciled$Events/df_PriorReconciled$Sum)*100,1)
df_PriorReconciled
#Replace the NA with '0000-00'
df_PriorReconciled$PriorReconciledDateTimeNew <- replace(df_PriorReconciled$PriorReconciledDateTimeNew, is.na(df_PriorReconciled$PriorReconciledDateTimeNew),'0000-00')
#Create a small dataframe
df_PriorReconciled_table <- data.frame(YearMonth = df_PriorReconciled$PriorReconciledDateTimeNew,
Events                  = df_PriorReconciled$Events,
Percent                 = df_PriorReconciled$Percent)
df_PriorReconciled_table
#arrange the data for graph purposes
df_PriorReconciled <- df_PriorReconciled_table %>%
select(YearMonth, Events, Percent)%>%
arrange((YearMonth))
visualize(
df_PriorReconciled,
xvar = "YearMonth",
yvar = "Percent",
type = "bar",
theme = "theme_classic",
fillcol = "#877A6E",
alpha = 0.9,
labs = list(
title = "Rule 10 - Percentage of Par Levels with Stock-outs by Prior Reconciled Year Month",
subtitle = "", caption = "",
x = "Prior Reconciled Year Month", y = "Percentage"
),
custom = TRUE
)  + theme(axis.text.x = element_text(angle =45, size = 9, hjust = 1)) +
# scale_fill_manual(values=c("#E17025", "#115391","#877A6E")) +
#scale_fill_manual(values=c("#115391", "#E17025", "#877A6E", "#D3468F")) +
theme(axis.title.x=element_text(color = "gray25",vjust = -1, hjust = 0.5, size = 14, face = "bold"))+
theme(axis.title.y=element_text(color = "gray25", vjust = 3, hjust = 0.5, size = 14, face = "bold",)) +
theme(axis.text.x = element_text(color = "gray25", size = 12))+
theme(axis.text.y = element_text(color = "gray25", size = 12))+
theme(legend.text = element_text(color = "gray25", face = "bold",size = 10)) +
theme(legend.title = element_text(color = "gray25", face = "bold",size = 10)) +
theme(plot.title = element_text(color = "gray25", face = "bold",size = 15, vjust = 1, hjust = 0.5)) +
#geom_col(position = "dodge") +
#geom_text(aes(label = Percentage),colour = "gray25", face = "bold",size = 3.5,vjust = -1, position = position_dodge(.9))+
geom_text(aes(x = YearMonth, y = Percent, label = sprintf("%.1f%%", Percent)), position = position_dodge(width = 0.9), size = 3.5,hjust = .5, vjust =-.5 , angle = 0)
kable(df_PriorReconciled, caption = "Rule 10 - Percentage of Par Levels with Stock-outs by Prior Reconciled Year Month"
,format = "simple",longtable = TRUE)
stats_overall<-explore(
Not_Recommended,
vars=c("Stockouts", "DaysSinceLastVend","Refill"),
#byvar= c("RefillFrequency" ),
fun=c("n_obs","min", "mean","median","max","sd"),
nr=Inf
)
summary(stats_overall, dec=2)
#dtab(stats_overall,dec=2) %>% render()
df_overalldataset<-stats_overall$tab
register("df_overalldataset")
df_overalldataset
kable(df_overalldataset, caption = "Statistics of Days Since Last Vend, Stock-outs and Refills"
,format = "simple",longtable = FALSE, full_width = T)
